prototype(Neos.MarketPlace:Package) {
    @context.package = Neos.MarketPlace:Packagist.Package {
        name = ${q(documentNode).property('title')}
    }
    @context.releasedVersionQuery = Neos.MarketPlace:ReleasedVersionQuery
    @context.developmentVersionsQuery = Neos.MarketPlace:DevelopmentVersionsQuery

    vendor = ${q(node).closest('[instanceof Neos.MarketPlace:Vendor]').get(0)}
    @context.vendor = ${this.vendor}

    attributes = TypoScript:Attributes {
        class = 'pm-block pm-block--package'
    }

    vendorName = ${q(this.vendor).property('title')}
    vendorUri = NodeUri {
        node = ${vendor}
    }

    lastActivity = ${q(node).lastActivity()}

    packageCount = ${q(this.vendor).find('[instanceof Neos.MarketPlace:Package]').count()}
    hasPackageCount = ${this.packageCount > 1}

    hasReleasedVersion = ${releasedVersionQuery.count() > 0}
    releasedVersionMenu = Neos.MarketPlace:VersionMenu {
        collection = ${releasedVersionQuery}
    }
    hasDevelopmentVersion = ${developmentVersionsQuery.count() > 0}
    developmentVersionMenu = Neos.MarketPlace:VersionMenu {
        collection = ${developmentVersionsQuery}
    }
    versions = Neos.MarketPlace:VersionPreview

    maintainerMenu = Neos.MarketPlace:PeopleMenu {
        path = 'maintainers'
    }

    main = ContentCollection {
        nodePath = 'main'
    }

    isAbandoned = ${q(documentNode).property('abandoned') ? true : false}
    abandoned = ${q(documentNode).property('abandoned')}

    packageName = ${q(documentNode).property('title')}
    packageTime = ${q(documentNode).property('time')}
    description = ${q(documentNode).property('description')}

    @process.contentElementWrapping >
}
