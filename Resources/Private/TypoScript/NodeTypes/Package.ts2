prototype(Neos.MarketPlace:Package) {
    @context.package = Neos.MarketPlace:Packagist.Package {
        name = ${q(documentNode).property('title')}
    }

    vendor = ${q(node).closest('[instanceof Neos.MarketPlace:Vendor]').get(0)}
    @context.vendor = ${this.vendor}

    attributes = TypoScript:Attributes {
        class = 'market-block'
    }

    vendorName = ${q(this.vendor).property('title')}
    vendorUri = NodeUri {
        node = ${vendor}
    }

    lastActivity = ${q(node).lastActivity()}

    packageCount = ${q(this.vendor).find('[instanceof Neos.MarketPlace:Package]').count()}
    hasPackageCount = ${this.packageCount > 1}

    versions = Neos.MarketPlace:VersionPreview

    main = ContentCollection {
        nodePath = 'main'
    }

    isAbandoned = ${q(documentNode).property('abandoned') ? true : false}
    abandoned = ${q(documentNode).property('abandoned')}

    packageName = ${q(documentNode).property('title')}
    packageTime = ${q(documentNode).property('time')}
    description = ${q(documentNode).property('description')}

    readmeSource = ${q(documentNode).find('readme').first().property('source')}
    hasReadme = ${this.readmeSource != '<p>Enter HTML here</p>' && String.isBlank(this.readmeSource) == false}
    readme = TYPO3.TypoScript:Collection {
        itemName = 'node'
        itemRenderer = TYPO3.Neos:ContentCase
        collection = ${q(documentNode).find('readme')}
    }

    metrics = Neos.MarketPlace:PackageMetrics

    @process.contentElementWrapping >
}
